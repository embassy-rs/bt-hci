//! UUIDs for the units module.

// This file is auto-generated by the update_uuids application.
// Based on https://bitbucket.org/bluetooth-SIG/public.git
// Commit hash: 22c4a7a751fe51de707be6d294adb0d115e86897

use super::BluetoothUuid16;

/// Bluetooth units UUID.
///
/// `0x2700` unitless
pub const UNITLESS: BluetoothUuid16 = BluetoothUuid16::new(0x2700);

/// Bluetooth units UUID.
///
/// `0x2701` length (metre)
pub const LENGTH_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2701);

/// Bluetooth units UUID.
///
/// `0x2702` mass (kilogram)
pub const MASS_KILOGRAM: BluetoothUuid16 = BluetoothUuid16::new(0x2702);

/// Bluetooth units UUID.
///
/// `0x2703` time (second)
pub const TIME_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x2703);

/// Bluetooth units UUID.
///
/// `0x2704` electric current (ampere)
pub const ELECTRIC_CURRENT_AMPERE: BluetoothUuid16 = BluetoothUuid16::new(0x2704);

/// Bluetooth units UUID.
///
/// `0x2705` thermodynamic temperature (kelvin)
pub const THERMODYNAMIC_TEMPERATURE_KELVIN: BluetoothUuid16 = BluetoothUuid16::new(0x2705);

/// Bluetooth units UUID.
///
/// `0x2706` amount of substance (mole)
pub const AMOUNT_OF_SUBSTANCE_MOLE: BluetoothUuid16 = BluetoothUuid16::new(0x2706);

/// Bluetooth units UUID.
///
/// `0x2707` luminous intensity (candela)
pub const LUMINOUS_INTENSITY_CANDELA: BluetoothUuid16 = BluetoothUuid16::new(0x2707);

/// Bluetooth units UUID.
///
/// `0x2710` area (square metres)
pub const AREA_SQUARE_METRES: BluetoothUuid16 = BluetoothUuid16::new(0x2710);

/// Bluetooth units UUID.
///
/// `0x2711` volume (cubic metres)
pub const VOLUME_CUBIC_METRES: BluetoothUuid16 = BluetoothUuid16::new(0x2711);

/// Bluetooth units UUID.
///
/// `0x2712` velocity (metres per second)
pub const VELOCITY_METRES_PER_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x2712);

/// Bluetooth units UUID.
///
/// `0x2713` acceleration (metres per second squared)
pub const ACCELERATION_METRES_PER_SECOND_SQUARED: BluetoothUuid16 = BluetoothUuid16::new(0x2713);

/// Bluetooth units UUID.
///
/// `0x2714` wavenumber (reciprocal metre)
pub const WAVENUMBER_RECIPROCAL_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2714);

/// Bluetooth units UUID.
///
/// `0x2715` density (kilogram per cubic metre)
pub const DENSITY_KILOGRAM_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2715);

/// Bluetooth units UUID.
///
/// `0x2716` surface density (kilogram per square metre)
pub const SURFACE_DENSITY_KILOGRAM_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2716);

/// Bluetooth units UUID.
///
/// `0x2717` specific volume (cubic metre per kilogram)
pub const SPECIFIC_VOLUME_CUBIC_METRE_PER_KILOGRAM: BluetoothUuid16 = BluetoothUuid16::new(0x2717);

/// Bluetooth units UUID.
///
/// `0x2718` current density (ampere per square metre)
pub const CURRENT_DENSITY_AMPERE_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2718);

/// Bluetooth units UUID.
///
/// `0x2719` magnetic field strength (ampere per metre)
pub const MAGNETIC_FIELD_STRENGTH_AMPERE_PER_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2719);

/// Bluetooth units UUID.
///
/// `0x271a` amount concentration (mole per cubic metre)
pub const AMOUNT_CONCENTRATION_MOLE_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x271a);

/// Bluetooth units UUID.
///
/// `0x271b` mass concentration (kilogram per cubic metre)
pub const MASS_CONCENTRATION_KILOGRAM_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x271b);

/// Bluetooth units UUID.
///
/// `0x271c` luminance (candela per square metre)
pub const LUMINANCE_CANDELA_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x271c);

/// Bluetooth units UUID.
///
/// `0x271d` refractive index
pub const REFRACTIVE_INDEX: BluetoothUuid16 = BluetoothUuid16::new(0x271d);

/// Bluetooth units UUID.
///
/// `0x271e` relative permeability
pub const RELATIVE_PERMEABILITY: BluetoothUuid16 = BluetoothUuid16::new(0x271e);

/// Bluetooth units UUID.
///
/// `0x2720` plane angle (radian)
pub const PLANE_ANGLE_RADIAN: BluetoothUuid16 = BluetoothUuid16::new(0x2720);

/// Bluetooth units UUID.
///
/// `0x2721` solid angle (steradian)
pub const SOLID_ANGLE_STERADIAN: BluetoothUuid16 = BluetoothUuid16::new(0x2721);

/// Bluetooth units UUID.
///
/// `0x2722` frequency (hertz)
pub const FREQUENCY_HERTZ: BluetoothUuid16 = BluetoothUuid16::new(0x2722);

/// Bluetooth units UUID.
///
/// `0x2723` force (newton)
pub const FORCE_NEWTON: BluetoothUuid16 = BluetoothUuid16::new(0x2723);

/// Bluetooth units UUID.
///
/// `0x2724` pressure (pascal)
pub const PRESSURE_PASCAL: BluetoothUuid16 = BluetoothUuid16::new(0x2724);

/// Bluetooth units UUID.
///
/// `0x2725` energy (joule)
pub const ENERGY_JOULE: BluetoothUuid16 = BluetoothUuid16::new(0x2725);

/// Bluetooth units UUID.
///
/// `0x2726` power (watt)
pub const POWER_WATT: BluetoothUuid16 = BluetoothUuid16::new(0x2726);

/// Bluetooth units UUID.
///
/// `0x2727` electric charge (coulomb)
pub const ELECTRIC_CHARGE_COULOMB: BluetoothUuid16 = BluetoothUuid16::new(0x2727);

/// Bluetooth units UUID.
///
/// `0x2728` electric potential difference (volt)
pub const ELECTRIC_POTENTIAL_DIFFERENCE_VOLT: BluetoothUuid16 = BluetoothUuid16::new(0x2728);

/// Bluetooth units UUID.
///
/// `0x2729` capacitance (farad)
pub const CAPACITANCE_FARAD: BluetoothUuid16 = BluetoothUuid16::new(0x2729);

/// Bluetooth units UUID.
///
/// `0x272a` electric resistance (ohm)
pub const ELECTRIC_RESISTANCE_OHM: BluetoothUuid16 = BluetoothUuid16::new(0x272a);

/// Bluetooth units UUID.
///
/// `0x272b` electric conductance (siemens)
pub const ELECTRIC_CONDUCTANCE_SIEMENS: BluetoothUuid16 = BluetoothUuid16::new(0x272b);

/// Bluetooth units UUID.
///
/// `0x272c` magnetic flux (weber)
pub const MAGNETIC_FLUX_WEBER: BluetoothUuid16 = BluetoothUuid16::new(0x272c);

/// Bluetooth units UUID.
///
/// `0x272d` magnetic flux density (tesla)
pub const MAGNETIC_FLUX_DENSITY_TESLA: BluetoothUuid16 = BluetoothUuid16::new(0x272d);

/// Bluetooth units UUID.
///
/// `0x272e` inductance (henry)
pub const INDUCTANCE_HENRY: BluetoothUuid16 = BluetoothUuid16::new(0x272e);

/// Bluetooth units UUID.
///
/// `0x272f` Celsius temperature (degree Celsius)
pub const CELSIUS_TEMPERATURE_DEGREE_CELSIUS: BluetoothUuid16 = BluetoothUuid16::new(0x272f);

/// Bluetooth units UUID.
///
/// `0x2730` luminous flux (lumen)
pub const LUMINOUS_FLUX_LUMEN: BluetoothUuid16 = BluetoothUuid16::new(0x2730);

/// Bluetooth units UUID.
///
/// `0x2731` illuminance (lux)
pub const ILLUMINANCE_LUX: BluetoothUuid16 = BluetoothUuid16::new(0x2731);

/// Bluetooth units UUID.
///
/// `0x2732` activity referred to a radionuclide (becquerel)
pub const ACTIVITY_REFERRED_TO_A_RADIONUCLIDE_BECQUEREL: BluetoothUuid16 = BluetoothUuid16::new(0x2732);

/// Bluetooth units UUID.
///
/// `0x2733` absorbed dose (gray)
pub const ABSORBED_DOSE_GRAY: BluetoothUuid16 = BluetoothUuid16::new(0x2733);

/// Bluetooth units UUID.
///
/// `0x2734` dose equivalent (sievert)
pub const DOSE_EQUIVALENT_SIEVERT: BluetoothUuid16 = BluetoothUuid16::new(0x2734);

/// Bluetooth units UUID.
///
/// `0x2735` catalytic activity (katal)
pub const CATALYTIC_ACTIVITY_KATAL: BluetoothUuid16 = BluetoothUuid16::new(0x2735);

/// Bluetooth units UUID.
///
/// `0x2740` dynamic viscosity (pascal second)
pub const DYNAMIC_VISCOSITY_PASCAL_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x2740);

/// Bluetooth units UUID.
///
/// `0x2741` moment of force (newton metre)
pub const MOMENT_OF_FORCE_NEWTON_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2741);

/// Bluetooth units UUID.
///
/// `0x2742` surface tension (newton per metre)
pub const SURFACE_TENSION_NEWTON_PER_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2742);

/// Bluetooth units UUID.
///
/// `0x2743` angular velocity (radian per second)
pub const ANGULAR_VELOCITY_RADIAN_PER_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x2743);

/// Bluetooth units UUID.
///
/// `0x2744` angular acceleration (radian per second squared)
pub const ANGULAR_ACCELERATION_RADIAN_PER_SECOND_SQUARED: BluetoothUuid16 = BluetoothUuid16::new(0x2744);

/// Bluetooth units UUID.
///
/// `0x2745` heat flux density (watt per square metre)
pub const HEAT_FLUX_DENSITY_WATT_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2745);

/// Bluetooth units UUID.
///
/// `0x2746` heat capacity (joule per kelvin)
pub const HEAT_CAPACITY_JOULE_PER_KELVIN: BluetoothUuid16 = BluetoothUuid16::new(0x2746);

/// Bluetooth units UUID.
///
/// `0x2747` specific heat capacity (joule per kilogram kelvin)
pub const SPECIFIC_HEAT_CAPACITY_JOULE_PER_KILOGRAM_KELVIN: BluetoothUuid16 = BluetoothUuid16::new(0x2747);

/// Bluetooth units UUID.
///
/// `0x2748` specific energy (joule per kilogram)
pub const SPECIFIC_ENERGY_JOULE_PER_KILOGRAM: BluetoothUuid16 = BluetoothUuid16::new(0x2748);

/// Bluetooth units UUID.
///
/// `0x2749` thermal conductivity (watt per metre kelvin)
pub const THERMAL_CONDUCTIVITY_WATT_PER_METRE_KELVIN: BluetoothUuid16 = BluetoothUuid16::new(0x2749);

/// Bluetooth units UUID.
///
/// `0x274a` energy density (joule per cubic metre)
pub const ENERGY_DENSITY_JOULE_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x274a);

/// Bluetooth units UUID.
///
/// `0x274b` electric field strength (volt per metre)
pub const ELECTRIC_FIELD_STRENGTH_VOLT_PER_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x274b);

/// Bluetooth units UUID.
///
/// `0x274c` electric charge density (coulomb per cubic metre)
pub const ELECTRIC_CHARGE_DENSITY_COULOMB_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x274c);

/// Bluetooth units UUID.
///
/// `0x274d` surface charge density (coulomb per square metre)
pub const SURFACE_CHARGE_DENSITY_COULOMB_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x274d);

/// Bluetooth units UUID.
///
/// `0x274e` electric flux density (coulomb per square metre)
pub const ELECTRIC_FLUX_DENSITY_COULOMB_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x274e);

/// Bluetooth units UUID.
///
/// `0x274f` permittivity (farad per metre)
pub const PERMITTIVITY_FARAD_PER_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x274f);

/// Bluetooth units UUID.
///
/// `0x2750` permeability (henry per metre)
pub const PERMEABILITY_HENRY_PER_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2750);

/// Bluetooth units UUID.
///
/// `0x2751` molar energy (joule per mole)
pub const MOLAR_ENERGY_JOULE_PER_MOLE: BluetoothUuid16 = BluetoothUuid16::new(0x2751);

/// Bluetooth units UUID.
///
/// `0x2752` molar entropy (joule per mole kelvin)
pub const MOLAR_ENTROPY_JOULE_PER_MOLE_KELVIN: BluetoothUuid16 = BluetoothUuid16::new(0x2752);

/// Bluetooth units UUID.
///
/// `0x2753` exposure (coulomb per kilogram)
pub const EXPOSURE_COULOMB_PER_KILOGRAM: BluetoothUuid16 = BluetoothUuid16::new(0x2753);

/// Bluetooth units UUID.
///
/// `0x2754` absorbed dose rate (gray per second)
pub const ABSORBED_DOSE_RATE_GRAY_PER_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x2754);

/// Bluetooth units UUID.
///
/// `0x2755` radiant intensity (watt per steradian)
pub const RADIANT_INTENSITY_WATT_PER_STERADIAN: BluetoothUuid16 = BluetoothUuid16::new(0x2755);

/// Bluetooth units UUID.
///
/// `0x2756` radiance (watt per square metre steradian)
pub const RADIANCE_WATT_PER_SQUARE_METRE_STERADIAN: BluetoothUuid16 = BluetoothUuid16::new(0x2756);

/// Bluetooth units UUID.
///
/// `0x2757` catalytic activity concentration (katal per cubic metre)
pub const CATALYTIC_ACTIVITY_CONCENTRATION_KATAL_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x2757);

/// Bluetooth units UUID.
///
/// `0x2760` time (minute)
pub const TIME_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x2760);

/// Bluetooth units UUID.
///
/// `0x2761` time (hour)
pub const TIME_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x2761);

/// Bluetooth units UUID.
///
/// `0x2762` time (day)
pub const TIME_DAY: BluetoothUuid16 = BluetoothUuid16::new(0x2762);

/// Bluetooth units UUID.
///
/// `0x2763` plane angle (degree)
pub const PLANE_ANGLE_DEGREE: BluetoothUuid16 = BluetoothUuid16::new(0x2763);

/// Bluetooth units UUID.
///
/// `0x2764` plane angle (minute)
pub const PLANE_ANGLE_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x2764);

/// Bluetooth units UUID.
///
/// `0x2765` plane angle (second)
pub const PLANE_ANGLE_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x2765);

/// Bluetooth units UUID.
///
/// `0x2766` area (hectare)
pub const AREA_HECTARE: BluetoothUuid16 = BluetoothUuid16::new(0x2766);

/// Bluetooth units UUID.
///
/// `0x2767` volume (litre)
pub const VOLUME_LITRE: BluetoothUuid16 = BluetoothUuid16::new(0x2767);

/// Bluetooth units UUID.
///
/// `0x2768` mass (tonne)
pub const MASS_TONNE: BluetoothUuid16 = BluetoothUuid16::new(0x2768);

/// Bluetooth units UUID.
///
/// `0x2780` pressure (bar)
pub const PRESSURE_BAR: BluetoothUuid16 = BluetoothUuid16::new(0x2780);

/// Bluetooth units UUID.
///
/// `0x2781` pressure (millimetre of mercury)
pub const PRESSURE_MILLIMETRE_OF_MERCURY: BluetoothUuid16 = BluetoothUuid16::new(0x2781);

/// Bluetooth units UUID.
///
/// `0x2782` length (ångström)
pub const LENGTH_ANGSTROM: BluetoothUuid16 = BluetoothUuid16::new(0x2782);

/// Bluetooth units UUID.
///
/// `0x2783` length (nautical mile)
pub const LENGTH_NAUTICAL_MILE: BluetoothUuid16 = BluetoothUuid16::new(0x2783);

/// Bluetooth units UUID.
///
/// `0x2784` area (barn)
pub const AREA_BARN: BluetoothUuid16 = BluetoothUuid16::new(0x2784);

/// Bluetooth units UUID.
///
/// `0x2785` velocity (knot)
pub const VELOCITY_KNOT: BluetoothUuid16 = BluetoothUuid16::new(0x2785);

/// Bluetooth units UUID.
///
/// `0x2786` logarithmic radio quantity (neper)
pub const LOGARITHMIC_RADIO_QUANTITY_NEPER: BluetoothUuid16 = BluetoothUuid16::new(0x2786);

/// Bluetooth units UUID.
///
/// `0x2787` logarithmic radio quantity (bel)
pub const LOGARITHMIC_RADIO_QUANTITY_BEL: BluetoothUuid16 = BluetoothUuid16::new(0x2787);

/// Bluetooth units UUID.
///
/// `0x27a0` length (yard)
pub const LENGTH_YARD: BluetoothUuid16 = BluetoothUuid16::new(0x27a0);

/// Bluetooth units UUID.
///
/// `0x27a1` length (parsec)
pub const LENGTH_PARSEC: BluetoothUuid16 = BluetoothUuid16::new(0x27a1);

/// Bluetooth units UUID.
///
/// `0x27a2` length (inch)
pub const LENGTH_INCH: BluetoothUuid16 = BluetoothUuid16::new(0x27a2);

/// Bluetooth units UUID.
///
/// `0x27a3` length (foot)
pub const LENGTH_FOOT: BluetoothUuid16 = BluetoothUuid16::new(0x27a3);

/// Bluetooth units UUID.
///
/// `0x27a4` length (mile)
pub const LENGTH_MILE: BluetoothUuid16 = BluetoothUuid16::new(0x27a4);

/// Bluetooth units UUID.
///
/// `0x27a5` pressure (pound-force per square inch)
pub const PRESSURE_POUND_FORCE_PER_SQUARE_INCH: BluetoothUuid16 = BluetoothUuid16::new(0x27a5);

/// Bluetooth units UUID.
///
/// `0x27a6` velocity (kilometre per hour)
pub const VELOCITY_KILOMETRE_PER_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x27a6);

/// Bluetooth units UUID.
///
/// `0x27a7` velocity (mile per hour)
pub const VELOCITY_MILE_PER_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x27a7);

/// Bluetooth units UUID.
///
/// `0x27a8` angular velocity (revolution per minute)
pub const ANGULAR_VELOCITY_REVOLUTION_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27a8);

/// Bluetooth units UUID.
///
/// `0x27a9` energy (gram calorie)
pub const ENERGY_GRAM_CALORIE: BluetoothUuid16 = BluetoothUuid16::new(0x27a9);

/// Bluetooth units UUID.
///
/// `0x27aa` energy (kilogram calorie)
pub const ENERGY_KILOGRAM_CALORIE: BluetoothUuid16 = BluetoothUuid16::new(0x27aa);

/// Bluetooth units UUID.
///
/// `0x27ab` energy (kilowatt hour)
pub const ENERGY_KILOWATT_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x27ab);

/// Bluetooth units UUID.
///
/// `0x27ac` thermodynamic temperature (degree Fahrenheit)
pub const THERMODYNAMIC_TEMPERATURE_DEGREE_FAHRENHEIT: BluetoothUuid16 = BluetoothUuid16::new(0x27ac);

/// Bluetooth units UUID.
///
/// `0x27ad` percentage
pub const PERCENTAGE: BluetoothUuid16 = BluetoothUuid16::new(0x27ad);

/// Bluetooth units UUID.
///
/// `0x27ae` per mille
pub const PER_MILLE: BluetoothUuid16 = BluetoothUuid16::new(0x27ae);

/// Bluetooth units UUID.
///
/// `0x27af` period (beats per minute)
pub const PERIOD_BEATS_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27af);

/// Bluetooth units UUID.
///
/// `0x27b0` electric charge (ampere hours)
pub const ELECTRIC_CHARGE_AMPERE_HOURS: BluetoothUuid16 = BluetoothUuid16::new(0x27b0);

/// Bluetooth units UUID.
///
/// `0x27b1` mass density (milligram per decilitre)
pub const MASS_DENSITY_MILLIGRAM_PER_DECILITRE: BluetoothUuid16 = BluetoothUuid16::new(0x27b1);

/// Bluetooth units UUID.
///
/// `0x27b2` mass density (millimole per litre)
pub const MASS_DENSITY_MILLIMOLE_PER_LITRE: BluetoothUuid16 = BluetoothUuid16::new(0x27b2);

/// Bluetooth units UUID.
///
/// `0x27b3` time (year)
pub const TIME_YEAR: BluetoothUuid16 = BluetoothUuid16::new(0x27b3);

/// Bluetooth units UUID.
///
/// `0x27b4` time (month)
pub const TIME_MONTH: BluetoothUuid16 = BluetoothUuid16::new(0x27b4);

/// Bluetooth units UUID.
///
/// `0x27b5` concentration (count per cubic metre)
pub const CONCENTRATION_COUNT_PER_CUBIC_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x27b5);

/// Bluetooth units UUID.
///
/// `0x27b6` irradiance (watt per square metre)
pub const IRRADIANCE_WATT_PER_SQUARE_METRE: BluetoothUuid16 = BluetoothUuid16::new(0x27b6);

/// Bluetooth units UUID.
///
/// `0x27b7` milliliter (per kilogram per minute)
pub const MILLILITER_PER_KILOGRAM_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27b7);

/// Bluetooth units UUID.
///
/// `0x27b8` mass (pound)
pub const MASS_POUND: BluetoothUuid16 = BluetoothUuid16::new(0x27b8);

/// Bluetooth units UUID.
///
/// `0x27b9` metabolic equivalent
pub const METABOLIC_EQUIVALENT: BluetoothUuid16 = BluetoothUuid16::new(0x27b9);

/// Bluetooth units UUID.
///
/// `0x27ba` step (per minute)
pub const STEP_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27ba);

/// Bluetooth units UUID.
///
/// `0x27bc` stroke (per minute)
pub const STROKE_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27bc);

/// Bluetooth units UUID.
///
/// `0x27bd` pace (kilometre per minute)
pub const PACE_KILOMETRE_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27bd);

/// Bluetooth units UUID.
///
/// `0x27be` luminous efficacy (lumen per watt)
pub const LUMINOUS_EFFICACY_LUMEN_PER_WATT: BluetoothUuid16 = BluetoothUuid16::new(0x27be);

/// Bluetooth units UUID.
///
/// `0x27bf` luminous energy (lumen hour)
pub const LUMINOUS_ENERGY_LUMEN_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x27bf);

/// Bluetooth units UUID.
///
/// `0x27c0` luminous exposure (lux hour)
pub const LUMINOUS_EXPOSURE_LUX_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x27c0);

/// Bluetooth units UUID.
///
/// `0x27c1` mass flow (gram per second)
pub const MASS_FLOW_GRAM_PER_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x27c1);

/// Bluetooth units UUID.
///
/// `0x27c2` volume flow (litre per second)
pub const VOLUME_FLOW_LITRE_PER_SECOND: BluetoothUuid16 = BluetoothUuid16::new(0x27c2);

/// Bluetooth units UUID.
///
/// `0x27c3` sound pressure (decibel)
pub const SOUND_PRESSURE_DECIBEL: BluetoothUuid16 = BluetoothUuid16::new(0x27c3);

/// Bluetooth units UUID.
///
/// `0x27c4` parts per million
pub const PARTS_PER_MILLION: BluetoothUuid16 = BluetoothUuid16::new(0x27c4);

/// Bluetooth units UUID.
///
/// `0x27c5` parts per billion
pub const PARTS_PER_BILLION: BluetoothUuid16 = BluetoothUuid16::new(0x27c5);

/// Bluetooth units UUID.
///
/// `0x27c6` mass density rate ((milligram per decilitre) per minute)
pub const MASS_DENSITY_RATE_MILLIGRAM_PER_DECILITRE_PER_MINUTE: BluetoothUuid16 = BluetoothUuid16::new(0x27c6);

/// Bluetooth units UUID.
///
/// `0x27c7` Electrical Apparent Energy (kilovolt ampere hour)
pub const ELECTRICAL_APPARENT_ENERGY_KILOVOLT_AMPERE_HOUR: BluetoothUuid16 = BluetoothUuid16::new(0x27c7);

/// Bluetooth units UUID.
///
/// `0x27c8` Electrical Apparent Power (volt ampere)
pub const ELECTRICAL_APPARENT_POWER_VOLT_AMPERE: BluetoothUuid16 = BluetoothUuid16::new(0x27c8);
